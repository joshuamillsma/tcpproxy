buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'com.joshmills'

description = """Java NIO based TCP Proxy"""

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'args4j:args4j:2.33'
    compile 'org.slf4j:slf4j-api:1.7.30'

    // write to console for now
    runtime 'org.slf4j:slf4j-simple:1.7.30'
}

task launch(type: JavaExec) {
    if (project.hasProperty('args')) {
        args(project.args.split(' '))
    }

    if (project.hasProperty('debug')) {
        debugOptions {
            enabled = true
            port = 18443
            server = true
            suspend = project.hasProperty('suspend')
        }
    }

    if (project.hasProperty('verboseLog')) {
        systemProperties 'org.slf4j.simpleLogger.defaultLogLevel':'DEBUG'
    }

    jvmArgs '-Xms800m'
    jvmArgs '-Xmx800m'
    jvmArgs '-XX:SurvivorRatio=8'
    jvmArgs '-XX:MaxTenuringThreshold=4'
    jvmArgs '-XX:MaxNewSize=500m'
    jvmArgs '-XX:NewSize=500m'
    int javaMajor = JavaVersion.current().getMajorVersion().toInteger()
    if (javaMajor <= 8) {
        // CMS tends to beat G1 prior to java 11
        // CMS has better pause times than the default ParallelGC collector
        jvmArgs '-Xloggc:gc.log'
        jvmArgs '-XX:+PrintGCDetails'
        jvmArgs '-XX:+UseConcMarkSweepGC'
    } else {
        jvmArgs '-Xlog:gc=info,gc+start=info,gc+age=trace,gc+heap=info:file=gc.log:time,uptime,tags'
        jvmArgs '-XX:-G1UseAdaptiveIHOP'
        jvmArgs '-XX:InitiatingHeapOccupancyPercent=85'
    }
    description = "Launch TcpProxy"
    main = "com.joshmills.TcpProxy"
    classpath = sourceSets.main.runtimeClasspath
}